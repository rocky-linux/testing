# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'yaml'

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

# configs, custom updates defaults
defaults_cfg = YAML.load_file('vagrant-settings.yaml_defaults')
if File.exist?('vagrant-settings.yaml')
  custom_cfg = YAML.load_file('vagrant-settings.yaml')
  cfg = defaults_cfg.merge(custom_cfg)
else
  cfg = defaults_cfg
end

Vagrant.configure("2") do |config|
  config.vm.box = cfg["box_image"]

  config.vm.provider "virtualbox" do |vb|
    vb.memory = cfg["box_ram"]
    vb.cpus = cfg["box_cpus"]
  end

  config.vm.provision "shell", name: "Start Timestamp", inline: <<-SHELL
    echo "Starting QA:Testcase-Debranding on $(date)"
  SHELL

  config.vm.provision "shell", name: "Install requirements", inline: <<-SHELL
    . /etc/os-release
    [[ "${VERSION_ID}" =~ ^8 ]] && dnf -y --enablerepo=extras,powertools update
    [[ "${VERSION_ID}" =~ ^ ]] && dnf -y --enablerepo=extras,crb update
    dnf -y install epel-release
    dnf -y install jq koji python3
    dnf config-manager --set-enabled rt
    dnf config-manager --set-enabled ha
    curl -LR https://github.com/mikefarah/yq/releases/download/v4.25.1/yq_linux_amd64 -o yq
    chmod +x yq && mv yq /usr/local/bin
  SHELL

  config.vm.provision "file", source: "etc/koji.conf", destination: "/tmp/koji.conf"

  config.vm.provision "shell", name: "Deploy koji.conf", inline: <<-SHELL
    cat /tmp/koji.conf > /etc/koji.conf
  SHELL

  config.vm.provision "shell", name: "Prepare testing directories", inline: <<-SHELL
    mkdir -pv /vagrant/{isos,output}
  SHELL

  config.vm.provision "shell" do |script|
    script.name   = "Rocky #{cfg['version']} #{cfg['arch']} Debrand Validation"
    script.privileged = false
    script.inline = "/vagrant/scripts/test_wrapper.sh"
  end

  config.vm.provision "shell", name: "End Timestamp", inline: <<-SHELL
    echo "Finished QA:Testcase-Debranding on $(date)"
  SHELL

end
